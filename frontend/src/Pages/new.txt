import * as React from "react";
import data from "../data";
import {Link} from 'react-router-dom';
import Box from "@mui/material/Box";
import Grid from "@mui/material/Unstable_Grid2";
// import Box from '@mui/joy/Box';
import Rating from "@mui/material/Rating";
import Button from "@mui/joy/Button";
import Card from "@mui/joy/Card";
import CardActions from "@mui/joy/CardActions";
import Chip from "@mui/joy/Chip";
import Divider from "@mui/joy/Divider";
import List from "@mui/joy/List";
import ListItem from "@mui/joy/ListItem";
import ListItemDecorator from "@mui/joy/ListItemDecorator";
import Typography from "@mui/joy/Typography";
import Check from "@mui/icons-material/Check";
import KeyboardArrowRight from "@mui/icons-material/KeyboardArrowRight";
import { styled } from '@mui/material/styles';
import Paper from '@mui/material/Paper';

const Item = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
  ...theme.typography.body2,
  padding: theme.spacing(1),
  textAlign: 'center',
  color: theme.palette.text.secondary,
}));

// export default function FullBorderedGrid() {
//   return (
//     <Box sx={{ flexGrow: 1, p: 2, pt: 15 }}>
//       <Grid
//         container
//         spacing={2}
//         sx={{
//           "--Grid-borderWidth": "1px",
//           borderTop: "var(--Grid-borderWidth)",
//           borderLeft: "var(--Grid-borderWidth)",
//           "& > div": {
//             borderRight: "var(--Grid-borderWidth)",
//             borderBottom: "var(--Grid-borderWidth)",
//           },
//         }}
//       >
//         {data.courses?.map((course) => (
//           <Grid {...{ xs: 12, sm: 12, md: 6, lg: 4 }} minHeight={160}>
//             <Link to={`/courses/${course.code}`} style={{ textDecoration: 'none' }}>
//             <Card
//               key={course}
//               size="lg"
//               variant="solid #000"
//               color="#000"
//               border="1px"
//               invertedColors
//               sx={{ bgcolor: "#fff" }}
//             >
//               <Chip size="sm" variant="outlined">
//                 {course.tag}
//               </Chip>
//               <Typography level="h2">{course.name}</Typography>
//               <List
//                 size="sm"
//                 sx={{
//                   display: "grid",
//                   gridTemplateColumns: "1fr 1fr",
//                   mx: "calc(-1 * var(--ListItem-paddingX))",
//                 }}
//               >
//                 <ListItem>
//                   <Rating name="read-only" value={4} readOnly />
//                 </ListItem>
//                 <ListItem>Reviews {course.review}</ListItem>
//               </List>
//               <Divider inset="none" />
//               <List
//                 size="sm"
//                 sx={{
//                   display: "grid",
//                   gridTemplateColumns: "0.5fr 0.5fr",
//                   mx: "calc(-1 * var(--ListItem-paddingX))",
//                 }}
//               >
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Available Credits: {course.credits}
//                 </ListItem>
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Course Level: {course.level}
//                 </ListItem>
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Course Code: {course.code}
//                 </ListItem>
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Max GPA Weight: {course.weight}
//                 </ListItem>
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Course Length: {course.length}
//                 </ListItem>
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Category Type: {course.type}
//                 </ListItem>
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Course Category: {course.category}
//                 </ListItem>
//                 <ListItem>
//                   <ListItemDecorator>
//                     <Check />
//                   </ListItemDecorator>
//                   Course Sub-category: {course.subcategory}
//                 </ListItem>
//               </List>
//               <Divider inset="none" />
//               <CardActions>
//                 <Typography level="title-lg" sx={{ mr: "auto" }}>
//                   {course.cost}${" "}
//                   <Typography fontSize="sm" textColor="text.tertiary">
//                     / year
//                   </Typography>
//                 </Typography>
//                 <Button endDecorator={<KeyboardArrowRight />}>
//                   Add To Cart
//                 </Button>
//               </CardActions>
//             </Card>
//             </Link>
//           </Grid>
//         ))}
//       </Grid>
//     </Box>
//   );
// }

export default function BasicGrid() {
  return (
    <Box sx={{ flexGrow: 1 }}>
      <Grid container spacing={2}>
        <Grid xs={4}>
          <Item>xs=4</Item>
        </Grid>
        <Grid xs={8}>
          <Item>
          <Grid
        container
        spacing={2}
        sx={{
          "--Grid-borderWidth": "1px",
          borderTop: "var(--Grid-borderWidth)",
          borderLeft: "var(--Grid-borderWidth)",
          "& > div": {
            borderRight: "var(--Grid-borderWidth)",
            borderBottom: "var(--Grid-borderWidth)",
          },
        }}
      >
        {data.courses?.map((course) => (
          <Grid {...{ xs: 12, sm: 12, md: 6, lg: 4 }} minHeight={160}>
            <Link to={`/courses/${course.code}`} style={{ textDecoration: 'none' }}>
            <Card
              key={course}
              size="lg"
              variant="solid #000"
              color="#000"
              border="1px"
              invertedColors
              sx={{ bgcolor: "#fff" }}
            >
              <Chip size="sm" variant="outlined">
                {course.tag}
              </Chip>
              <Typography level="h2">{course.name}</Typography>
              <List
                size="sm"
                sx={{
                  display: "grid",
                  gridTemplateColumns: "1fr 1fr",
                  mx: "calc(-1 * var(--ListItem-paddingX))",
                }}
              >
                <ListItem>
                  <Rating name="read-only" value={4} readOnly />
                </ListItem>
                <ListItem>Reviews {course.review}</ListItem>
              </List>
              <Divider inset="none" />
              <List
                size="sm"
                sx={{
                  display: "grid",
                  gridTemplateColumns: "0.5fr 0.5fr",
                  mx: "calc(-1 * var(--ListItem-paddingX))",
                }}
              >
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Available Credits: {course.credits}
                </ListItem>
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Course Level: {course.level}
                </ListItem>
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Course Code: {course.code}
                </ListItem>
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Max GPA Weight: {course.weight}
                </ListItem>
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Course Length: {course.length}
                </ListItem>
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Category Type: {course.type}
                </ListItem>
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Course Category: {course.category}
                </ListItem>
                <ListItem>
                  <ListItemDecorator>
                    <Check />
                  </ListItemDecorator>
                  Course Sub-category: {course.subcategory}
                </ListItem>
              </List>
              <Divider inset="none" />
              <CardActions>
                <Typography level="title-lg" sx={{ mr: "auto" }}>
                  {course.cost}${" "}
                  <Typography fontSize="sm" textColor="text.tertiary">
                    / year
                  </Typography>
                </Typography>
                <Button endDecorator={<KeyboardArrowRight />}>
                  Add To Cart
                </Button>
              </CardActions>
            </Card>
            </Link>
          </Grid>
        ))}
      </Grid>
          </Item>
        </Grid>
      </Grid>
    </Box>
  );
}